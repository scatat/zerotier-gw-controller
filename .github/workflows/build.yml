name: Build & Test

on:
  workflow_dispatch:
  push:
    branches: [main, master]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run tests
        run: |
          pytest --maxfail=2 --disable-warnings

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Build Python package
        run: |
          pip install build
          python -m build

      - name: Archive Python package
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/*

      - name: Build Debian package
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential dpkg-dev debhelper dh-python python3-all python3-setuptools
          ./scripts/build-deb.sh

      - name: Debug List all .deb files after build
        run: |
          echo "Listing all .deb files in project directory:"
          find . -name "*.deb" -print

      - name: Move .deb file into project directory
        run: |
          mv ../*.deb .

      - name: Archive Debian package
        uses: actions/upload-artifact@v4
        with:
          name: deb-dist
          path: "*.deb"

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist/

      - name: Download deb artifacts
        uses: actions/download-artifact@v4
        with:
          name: deb-dist
          path: deb/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
            deb/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Python package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          password: ${{ secrets.PYPI_TOKEN }}
